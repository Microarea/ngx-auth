{"version":3,"sources":["ng://@tb/auth/lib/models/instance.model.ts","ng://@tb/auth/lib/models/login-response.ts","ng://@tb/auth/lib/models/login-request.ts","ng://@tb/auth/lib/models/storage-vars.ts","ng://@tb/auth/lib/models/subscription.model.ts","ng://@tb/auth/lib/models/token.ts","node_modules/tslib/tslib.es6.js","ng://@tb/auth/lib/auth.service.ts","ng://@tb/auth/lib/auth.guard.ts","ng://@tb/auth/lib/auth.interceptor.ts","ng://@tb/auth/lib/pages/login.component.ts","ng://@tb/auth/lib/logout.component.ts","ng://@tb/auth/lib/auth.module.ts"],"names":["Instance","LoginResponse","this","Result","LoginRequest","AccountName","Password","AppId","JwtToken","SubscriptionKey","StorageVars","JWT","EXP","CULTURE","UI_CULTURE","ACCOUNT_NAME","Subscription","Token","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","moment","moment_","TbAuthService","prototype","login","loginRequest","_this","http","post","getLoginUrl","pipe","map","loginResponse","storageData","clearStorage","Message","errorMessage","toPromise","isValidToken","authtoken","get","getIsValidTokenUrl","tap","jObj","console","log","of","getRedirectUrl","redirectUrl","setRedirectUrl","url","getBaseUrl","loginUrl","env","auth","getLogoutUrl","getChangePasswordUrl","getResetPasswordUrl","getSubsKeysForAccountUrl","logoff","saveCulture","culture","uiCulture","localStorage","setItem","removeItem","isExpired","expiration","getItem","expiresAt","JSON","parse","isAfter","respCulture","RegionalSettings","undefined","window","navigator","language","respUiCulture","Language","exp","ExpirationDate","add","stringify","valueOf","Injectable","args","providedIn","Inject","HttpClient","Router","router","TbAuthGuard","canActivate","state","jwt","queryParams","hasOwnProperty","subKey","appid","authService","catch","err","error","navigate","_a","TbAuthInterceptor","intercept","request","token","clone","setHeaders","Authorization","handle","TbLoginComponent","ngOnInit","loadAccountName","keyUpFunction","event","keyCode","capsOn","getModifierState","capsLockOn","disabledButton","loading","accountNameBlur","saveAccountName","Component","selector","template","TbLogoutComponent","TbAuthModule","forRoot","ngModule","providers","NgModule","declarations","imports","CommonModule","FormsModule","InputsModule","ButtonsModule","exports"],"mappings":"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","sourcesContent":["export class Instance {\r\n    Domain: string;\r\n    InstallationPath: string;\r\n    constructor() {}\r\n}\r\n","export class LoginResponse {\r\n    Result = false;\r\n    Message: string;\r\n    ResultCode: number;\r\n    JwtToken: string;\r\n    ExpirationDate: string;\r\n    RegionalSettings: string;\r\n    Language: string;\r\n}\r\n","export class LoginRequest {\r\n    AccountName = '';\r\n    Password = '';\r\n    AppId = 'M4'; // identificativo dell'applicazione che sta effettuando la login (da tabellare)\r\n    JwtToken = ''; // se presente, sto facendo una autologin\r\n    SubscriptionKey = null; // login su una specifica Subscription\r\n}\r\n","export class StorageVars {\r\n    public static JWT = 'M4_jwt_token';\r\n    public static EXP = 'M4_jwt_token_expiration_date';\r\n    public static CULTURE = 'M4_culture';\r\n    public static UI_CULTURE = 'M4_ui_culture';\r\n    public static ACCOUNT_NAME = 'M4_account_name';\r\n}\r\n","import { Instance } from './instance.model';\r\n\r\nexport class Subscription {\r\n    SubscriptionKey: string;\r\n    Description: string;\r\n    Instance: Instance;\r\n    constructor() {}\r\n}\r\n","export class Token {\r\n    JwtToken = '';\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\nimport { of, Observable } from 'rxjs';\nimport { tap, map } from 'rxjs/operators';\n\nimport { StorageVars } from './models/storage-vars';\n\nimport { LoginRequest } from './models/login-request';\nimport { LoginResponse } from './models/login-response';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TbAuthService {\n    public loginUrl: string;\n    public errorMessage: string;\n    public redirectUrl = '/';\n\n    constructor(@Inject('env') private env, private http: HttpClient, public router: Router) {}\n\n    public login(loginRequest: LoginRequest): Promise<LoginResponse> {\n        // console.log('authService.login - loginRequest', loginRequest);\n        return this.http\n            .post<LoginResponse>(this.getLoginUrl(), loginRequest)\n            .pipe(\n                map((loginResponse: LoginResponse) => {\n                    if (!loginResponse.Result) {\n                        this.clearStorage();\n                        loginResponse.Message = loginResponse.Message ? loginResponse.Message : 'Login error...';\n                        this.errorMessage = loginResponse.Message;\n                        return loginResponse;\n                    }\n\n                    this.storageData(loginResponse);\n\n                    return loginResponse;\n                })\n            )\n            .toPromise();\n    }\n\n    async isValidToken(authtoken = null) {\n        if (!authtoken) {\n            return of(false);\n        }\n\n        return this.http\n            .get(this.getIsValidTokenUrl() + authtoken)\n            .pipe(\n                tap((jObj: any) => {\n                    console.log('isValidToken - response', jObj);\n                    if (!jObj.Result) {\n                        jObj.Message = jObj.Message ? jObj.Message : 'isValidToken error...';\n\n                        // this.clearStorage();\n\n                        this.errorMessage = jObj.Message;\n                    }\n                })\n            )\n            .toPromise();\n    }\n\n    getRedirectUrl(): string {\n        return this.redirectUrl;\n    }\n\n    setRedirectUrl(url: string): void {\n        this.redirectUrl = url;\n    }\n\n    /**\n     * Ritorna la base url del backend,\n     * caricata da un file di configurazione caricato dinamicamente (assets/environment.json)\n     */\n    public getBaseUrl() {\n        if (this.loginUrl) return this.loginUrl;\n\n        this.loginUrl = this.env.auth.url;\n\n        return this.loginUrl;\n    }\n\n    public getIsValidTokenUrl() {\n        return this.getBaseUrl() + 'isvalidtoken/';\n    }\n\n    public getLoginUrl() {\n        return this.getBaseUrl() + 'login/';\n    }\n\n    public getLogoutUrl() {\n        return this.getBaseUrl() + 'logout/';\n    }\n\n    public getChangePasswordUrl() {\n        return this.getBaseUrl() + 'changepassword/';\n    }\n\n    public getResetPasswordUrl() {\n        return this.getBaseUrl() + 'resetpassword/';\n    }\n\n    public getSubsKeysForAccountUrl() {\n        return this.getBaseUrl() + 'subscriptionskeysforaccount/';\n    }\n\n    public logoff() {}\n\n    public saveCulture(culture = '', uiCulture = '') {\n        localStorage.setItem(StorageVars.CULTURE, culture);\n        localStorage.setItem(StorageVars.UI_CULTURE, uiCulture);\n    }\n\n    public clearStorage() {\n        localStorage.removeItem(StorageVars.JWT);\n        localStorage.removeItem(StorageVars.EXP);\n        localStorage.removeItem(StorageVars.CULTURE);\n        localStorage.removeItem(StorageVars.UI_CULTURE);\n    }\n\n    public isExpired() {\n        const expiration = localStorage.getItem(StorageVars.EXP);\n        if (!expiration) return false;\n\n        const expiresAt = JSON.parse(expiration);\n        return moment().isAfter(moment(expiresAt));\n    }\n\n    private storageData(loginResponse: LoginResponse) {\n        const respCulture: string =\n            loginResponse.RegionalSettings === undefined || loginResponse.RegionalSettings.length === 0\n                ? window.navigator.language\n                : loginResponse.RegionalSettings;\n        const respUiCulture: string =\n            loginResponse.Language === undefined || loginResponse.Language.length === 0\n                ? window.navigator.language\n                : loginResponse.Language;\n        this.saveCulture(respCulture, respUiCulture);\n\n        localStorage.setItem(StorageVars.JWT, loginResponse.JwtToken);\n\n        const exp = loginResponse.ExpirationDate ? moment(loginResponse.ExpirationDate) : moment().add(1, 'day');\n        localStorage.setItem(StorageVars.EXP, JSON.stringify(exp.valueOf()));\n    }\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\n\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\nimport { TbAuthService } from './auth.service';\nimport { StorageVars } from './models/storage-vars';\nimport { LoginRequest } from './models/login-request';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TbAuthGuard implements CanActivate {\n    constructor(private authService: TbAuthService, private router: Router, @Inject('env') private env) {}\n\n    async canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<boolean> {\n        console.log('ActivatedRouteSnapshot', next, state.url);\n\n        /**\n         * Se ricevo jwt e subKey significa che devo fare una \"autologin\"\n         * Creo un LoginRequest con i valori ricevuti, integro con appid letto da environment ed effettuo una login specifica\n         * In caso positivo vado in homepage \"/\"\n         */\n        const jwt = next.queryParams.hasOwnProperty('jwt') ? next.queryParams.jwt : null;\n        const subKey = next.queryParams.hasOwnProperty('subKey') ? next.queryParams.subKey : null;\n        if (jwt && subKey) {\n            const loginRequest: LoginRequest = new LoginRequest();\n            loginRequest.JwtToken = jwt;\n            loginRequest.SubscriptionKey = subKey;\n            loginRequest.AppId = this.env.auth.appid;\n\n            const loginResponse = await this.authService.login(loginRequest).catch(err => {\n                this.authService.errorMessage = err.error && err.error.Message;\n                this.router.navigate(['login']);\n                return;\n            });\n\n            if (!loginResponse) {\n                this.router.navigate(['login']);\n                return false;\n            }\n\n            if (loginResponse.Result) {\n                const url = this.authService.getRedirectUrl();\n                this.authService.errorMessage = '';\n                this.router.navigate([url]);\n            }\n        }\n\n        /**\n         * Se il token salvato in localStorage risulta scaduto, svuoto localStorage e rimando alla login\n         */\n        if (this.authService.isExpired()) {\n            this.authService.errorMessage = 'Token expired';\n            this.authService.clearStorage();\n            this.router.navigate(['login']);\n            return true;\n        }\n\n        /**\n         * Se arrivo qua vuol dire che ho giÃ  un token salvato e non scaduto quindi chiedo conferma della validitÃ \n         */\n        const authtoken = localStorage.getItem(StorageVars.JWT);\n        if (authtoken) {\n            // ho un token, ma ne verifico la validitÃ \n            const res = await this.authService.isValidToken(authtoken);\n\n            if (res.Result) {\n                return true;\n            } else {\n                this.router.navigate(['login']);\n                return false;\n            }\n        } else {\n            // non sono loggato quindi vado alla login\n            this.router.navigate(['login']);\n            return true;\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor, HttpResponse } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { StorageVars } from './models/storage-vars';\r\n\r\n@Injectable()\r\nexport class TbAuthInterceptor implements HttpInterceptor {\r\n    constructor() {}\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        /**\r\n         * Aggiungo a ogni httprequest l'header 'Authorization' con il nostro token\r\n         */\r\n        let token = JSON.stringify({\r\n            token: localStorage.getItem(StorageVars.JWT)\r\n        });\r\n\r\n        if (token) {\r\n            request = request.clone({\r\n                setHeaders: {\r\n                    Authorization: token\r\n                }\r\n            });\r\n        }\r\n\r\n        /*\r\n         * Elabora la response di ogni chiamata http\r\n         */\r\n        return next\r\n            .handle(request)\r\n            .pipe\r\n            /**\r\n             * Nel caso di chiamate a tb-loader, ricevo le TbLoaderInfo che vengono messe in cache locale\r\n             */\r\n            // tap((ev: HttpEvent<any>) => {\r\n            //     if (ev instanceof HttpResponse) {\r\n            //         let auth = ev.headers.get(\"Tb-loader-info\");\r\n            //         if (auth) {\r\n            //             let respJson = JSON.parse(auth);\r\n            //             if (respJson) {\r\n            //                 this.infoService.setTbLoaderInfo(new TBLoaderInfo(respJson.tbLoaderName, respJson.tbLoaderId));\r\n            //                 this.logger.debug(\"TbLoaderInfo -> \", respJson);\r\n            //             }\r\n            //         }\r\n            //     }\r\n            // })\r\n            ();\r\n    }\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { TbAuthService } from '../auth.service';\n\nimport { LoginRequest } from '../models/login-request';\nimport { StorageVars } from '../models/storage-vars';\n\n@Component({\n    selector: 'tb-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss']\n})\nexport class TbLoginComponent implements OnInit {\n    public capsLockOn = false;\n    public loading = false;\n    public loginRequest: LoginRequest;\n\n    constructor(public authService: TbAuthService, public router: Router, @Inject('env') private env) {\n        this.loginRequest = new LoginRequest();\n        this.loginRequest.AppId = env.auth.appid;\n    }\n\n    ngOnInit() {\n        this.loadAccountName();\n    }\n\n    // ---------------------------------------------------------------------------------------------\n    keyUpFunction(event) {\n        if (event.keyCode === 13) {\n            if (this.loginRequest.AccountName) this.login();\n        }\n        const capsOn = event.getModifierState && event.getModifierState('CapsLock');\n        this.capsLockOn = capsOn;\n    }\n\n    // -------------------------------------------------------------------------------------\n    disabledButton() {\n        return !this.loginRequest.AccountName || this.loading;\n    }\n\n    // -------------------------------------------------------------------------------------\n    accountNameBlur() {}\n\n    // ---------------------------------------------------------------------------------------------\n    async login() {\n        this.authService.errorMessage = '';\n        this.saveAccountName();\n        this.loading = true;\n\n        const result = await this.authService.login(this.loginRequest).catch(err => {\n            this.loading = false;\n            this.authService.errorMessage = err.error && err.error.Message;\n            return;\n        });\n\n        this.loading = false;\n\n        if (!result) return;\n\n        // todo controlla come vengono mostrati errori sia login sia checkdb\n        if (result.Result) {\n            const url = this.authService.getRedirectUrl();\n            this.authService.errorMessage = '';\n            this.router.navigate([url]);\n        } else {\n            this.loading = false;\n        }\n    }\n\n    // -------------------------------------------------------------------------------------\n    public loadAccountName() {\n        this.loginRequest.AccountName = localStorage.getItem(StorageVars.ACCOUNT_NAME);\n    }\n\n    // -------------------------------------------------------------------------------------\n    public saveAccountName() {\n        localStorage.setItem(StorageVars.ACCOUNT_NAME, this.loginRequest.AccountName);\n    }\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TbAuthService } from './auth.service';\nimport { StorageVars } from './models/storage-vars';\n\n@Component({\n    selector: 'tb-logout',\n    template: ''\n})\nexport class TbLogoutComponent {\n    constructor(public authService: TbAuthService, public router: Router) {\n        // const authtoken = localStorage.getItem(StorageVars.JWT);\n        // if (authtoken) authService.logoff();\n        // router.navigate([authService.getLoginUrl()]);\n    }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { InputsModule } from '@progress/kendo-angular-inputs';\nimport { ButtonsModule } from '@progress/kendo-angular-buttons';\n\nimport { TbLoginComponent } from './pages/login.component';\nimport { TbLogoutComponent } from './logout.component';\nimport { TbAuthService } from './auth.service';\n\n@NgModule({\n    declarations: [TbLoginComponent, TbLogoutComponent],\n    imports: [CommonModule, FormsModule, InputsModule, ButtonsModule],\n    exports: [TbLoginComponent, TbLogoutComponent]\n})\nexport class TbAuthModule {\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: TbAuthModule,\n            providers: [TbAuthService]\n        };\n    }\n}\n"]}